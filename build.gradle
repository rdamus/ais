plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}



version "0.1"
group "ais"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
	
	compile 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
	implementation 'dk.dma.ais.lib:ais-lib-communication:2.4'
	implementation 'dk.dma.ais.lib:ais-lib-messages:2.4'
	implementation 'dk.dma.ais.lib:ais-lib-utils:2.4'
	implementation 'dk.dma.ais.lib:ais-lib-json:2.4'
	// https://mvnrepository.com/artifact/dk.dma.commons/dma-commons-app
	compile group: 'dk.dma.commons', name: 'dma-commons-app', version: '0.5'
	// https://mvnrepository.com/artifact/dk.dma.enav/enav-model
	compile group: 'dk.dma.enav', name: 'enav-model', version: '0.6'
	// https://mvnrepository.com/artifact/org.geotools/gt-referencing
//	compile group: 'org.geotools', name: 'gt-referencing', version: '22-RC'
	
}

test.classpath += configurations.developmentOnly

mainClassName = "ais.Application"

// use JUnit 5 platform
test {
    useJUnitPlatform()
	testLogging{
		// Make sure output from
		// standard out or error is shown
		// in Gradle output.
		showStandardStreams = true
	}
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}


shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
